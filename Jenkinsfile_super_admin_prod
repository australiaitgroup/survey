pipeline {
    agent any

    environment {
        // Application configuration
        APP_NAME = 'survey-super-admin'

        // S3 Configuration - Deploy to Production bucket
        S3_BUCKET_NAME = 'sigma.jiangren.com.au'
        AWS_REGION = 'ap-southeast-2'

        // Super Admin specific configuration
        SUPER_ADMIN_PATH = 'super-admin'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }

        stage('Configure S3 Website') {
            steps {
                echo 'Configuring S3 static website hosting for SPA...'
                withVault(configuration: [timeout: 60, vaultCredentialId: 'Vault Credential', vaultUrl: 'https://vault.jiangren.com.au'], vaultSecrets: [[path: 'secret_aws/aws_prod', secretValues: [[vaultKey: 'AWS_ACCESS_KEY_ID'], [vaultKey: 'AWS_SECRET_ACCESS_KEY']]]]) {
                    sh '''
                        echo "üåê Configuring static website hosting for SPA support..."
                        aws s3 website s3://${S3_BUCKET_NAME}/ --index-document index.html --error-document index.html --region ${AWS_REGION}

                        echo "‚úÖ S3 website configuration completed"
                        echo "üìÑ Website endpoint: http://${S3_BUCKET_NAME}.s3-website-${AWS_REGION}.amazonaws.com/super-admin"
                    '''
                }
            }
        }

        stage('Setup Node.js & Install Dependencies') {
            steps {
                echo 'Setting up Node.js and installing Super Admin dependencies...'
                dir('super-admin') {
                    sh '''
                        # Check environment
                        echo "Node.js version: $(node --version)"
                        echo "NPM version: $(npm --version)"

                        # Clean install to ensure consistency
                        rm -rf node_modules package-lock.json
                        npm install

                        echo "‚úÖ Dependencies installed successfully"
                    '''
                }
            }
        }

        stage('Build Super Admin') {
            steps {
                echo 'Building Super Admin application for Production...'
                dir('super-admin') {
                    sh '''
                        # Build for production
                        NODE_ENV=production npm run build

                        # Verify build output
                        if [ ! -d "dist" ]; then
                            echo "‚ùå Build failed - dist directory not found"
                            exit 1
                        fi

                        echo "‚úÖ Build completed successfully"
                        echo "Build contents:"
                        ls -la dist/
                    '''
                }
            }
        }

        stage('Deploy to Production S3') {
            steps {
                echo 'Deploying Super Admin to Production S3 bucket...'
                withVault(configuration: [timeout: 60, vaultCredentialId: 'Vault Credential', vaultUrl: 'https://vault.jiangren.com.au'], vaultSecrets: [[path: 'secret_aws/aws_prod', secretValues: [[vaultKey: 'AWS_ACCESS_KEY_ID'], [vaultKey: 'AWS_SECRET_ACCESS_KEY']]]]) {
                    dir('super-admin') {
                        sh '''
                            echo "üöÄ Deploying Super Admin to Production environment..."
                            echo "üì¶ Target bucket: ${S3_BUCKET_NAME}"
                            echo "üìÅ Target path: /${SUPER_ADMIN_PATH}/"

                            # Upload static assets (JS, CSS, images) with long cache
                            aws s3 sync dist/ s3://${S3_BUCKET_NAME}/${SUPER_ADMIN_PATH}/ \
                                --region ${AWS_REGION} \
                                --delete \
                                --cache-control "public, max-age=31536000" \
                                --exclude "*.html" \
                                --exclude "*.json"

                            # Upload HTML and JSON files with no cache
                            aws s3 sync dist/ s3://${S3_BUCKET_NAME}/${SUPER_ADMIN_PATH}/ \
                                --region ${AWS_REGION} \
                                --include "*.html" \
                                --include "*.json" \
                                --cache-control "no-cache, no-store, must-revalidate"

                            # Ensure index.html has correct content type and cache headers
                            aws s3 cp s3://${S3_BUCKET_NAME}/${SUPER_ADMIN_PATH}/index.html \
                                s3://${S3_BUCKET_NAME}/${SUPER_ADMIN_PATH}/index.html \
                                --region ${AWS_REGION} \
                                --content-type "text/html" \
                                --cache-control "no-cache, no-store, must-revalidate" \
                                --metadata-directive REPLACE

                            echo "‚úÖ Production deployment completed successfully!"
                        '''
                    }
                }
            }
        }

        stage('Health Check') {
            steps {
                echo 'Performing deployment health check for Production environment...'
                script {
                    // Brief wait for S3 to update
                    sleep 5

                    sh '''
                        echo "üîç Running health check for Super Admin..."

                        # Check S3 website endpoint
                        S3_ENDPOINT="http://${S3_BUCKET_NAME}.s3-website-${AWS_REGION}.amazonaws.com/${SUPER_ADMIN_PATH}/"
                        echo "S3 endpoint: ${S3_ENDPOINT}"

                        # Check domain endpoint
                        DOMAIN_ENDPOINT="https://sigma.jiangren.com.au/${SUPER_ADMIN_PATH}/"
                        echo "Domain endpoint: ${DOMAIN_ENDPOINT}"

                        echo "‚úÖ Health check completed"
                        echo "üéØ Super Admin is accessible at the production domain endpoint"
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Production pipeline execution completed'
            cleanWs()
        }
        success {
            echo 'üéâ Super Admin Production deployment successful!'
            echo ''
            echo 'üìç Access URL:'
            echo '   https://sigma.jiangren.com.au/super-admin/'
            echo ''
            echo 'üí° Production Super Admin is now live!'
        }
        failure {
            echo '‚ùå Super Admin Production deployment failed!'
            echo ''
            echo 'Troubleshooting:'
            echo '  1. Check Jenkins credentials configuration'
            echo '  2. Verify S3 bucket permissions for sigma.jiangren.com.au'
            echo '  3. Ensure build process completed successfully'
            echo '  4. Check if production bucket exists and is properly configured'
        }
    }
}
